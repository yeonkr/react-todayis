[{"/Users/macbook/Desktop/simplediary/src/index.js":"1","/Users/macbook/Desktop/simplediary/src/App.js":"2","/Users/macbook/Desktop/simplediary/src/pages/Home.js":"3","/Users/macbook/Desktop/simplediary/src/pages/New.js":"4","/Users/macbook/Desktop/simplediary/src/pages/Edit.js":"5","/Users/macbook/Desktop/simplediary/src/pages/Diary.js":"6","/Users/macbook/Desktop/simplediary/src/components/MyButton.js":"7","/Users/macbook/Desktop/simplediary/src/components/MyHeader.js":"8","/Users/macbook/Desktop/simplediary/src/components/DiaryList.js":"9","/Users/macbook/Desktop/simplediary/src/components/DiaryItem.js":"10","/Users/macbook/Desktop/simplediary/src/components/DiaryEditor.js":"11","/Users/macbook/Desktop/simplediary/src/components/EmotionItem.js":"12","/Users/macbook/Desktop/simplediary/src/util/date.js":"13","/Users/macbook/Desktop/simplediary/src/util/emotion.js":"14"},{"size":219,"mtime":1660489111444,"results":"15","hashOfConfig":"16"},{"size":2703,"mtime":1660832077330,"results":"17","hashOfConfig":"16"},{"size":1661,"mtime":1660662961749,"results":"18","hashOfConfig":"16"},{"size":353,"mtime":1660827525955,"results":"19","hashOfConfig":"16"},{"size":1023,"mtime":1660827473843,"results":"20","hashOfConfig":"16"},{"size":2448,"mtime":1660827452779,"results":"21","hashOfConfig":"16"},{"size":354,"mtime":1660499459165,"results":"22","hashOfConfig":"16"},{"size":294,"mtime":1660500129145,"results":"23","hashOfConfig":"16"},{"size":2419,"mtime":1660826691871,"results":"24","hashOfConfig":"16"},{"size":1076,"mtime":1660826851242,"results":"25","hashOfConfig":"16"},{"size":3655,"mtime":1660827074239,"results":"26","hashOfConfig":"16"},{"size":464,"mtime":1660826951589,"results":"27","hashOfConfig":"16"},{"size":86,"mtime":1660577916982,"results":"28","hashOfConfig":"16"},{"size":678,"mtime":1660578420940,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"8mzx7p",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/macbook/Desktop/simplediary/src/index.js",[],[],[],"/Users/macbook/Desktop/simplediary/src/App.js",[],[],"/Users/macbook/Desktop/simplediary/src/pages/Home.js",[],[],"/Users/macbook/Desktop/simplediary/src/pages/New.js",[],[],"/Users/macbook/Desktop/simplediary/src/pages/Edit.js",["78","79"],[],"import { useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\nimport DiaryEditor from \"../components/DiaryEditor\";\n\nconst Edit = () => {\n  const [originData, setOriginData] = useState();\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const diaryList = useContext(DiaryStateContext);\n\n  useEffect(() => {\n    const titleElement = document.getElementsByTagName(\"title\")[0];\n    titleElement.innerHTML = `감정 일기장 - ${id}번 일기 수정`;\n  }, []);\n\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        (it) => parseInt(it.id) === parseInt(id)\n      );\n\n      if (targetDiary) {\n        setOriginData(targetDiary);\n      } else {\n        navigate(\"/\", { replace: true });\n      }\n    }\n  }, [id, diaryList]);\n\n  return (\n    <div>\n      {originData && <DiaryEditor isEdit={true} originData={originData} />}\n    </div>\n  );\n};\n\nexport default Edit;\n","/Users/macbook/Desktop/simplediary/src/pages/Diary.js",["80","81","82"],[],"import { useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\nimport { getStringDate } from \"../util/date\";\nimport { emotionList } from \"../util/emotion\";\n\nimport MyButton from \"../components/MyButton\";\nimport MyHeader from \"../components/MyHeader\";\n\nconst Diary = () => {\n  const { id } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    const titleElement = document.getElementsByTagName(\"title\")[0];\n    titleElement.innerHTML = `감정 일기장 - ${id}번 일기`;\n  }, []);\n\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        (it) => parseInt(it.id) === parseInt(id)\n      );\n      if (targetDiary) {\n        // 일기가 존재할때\n        setData(targetDiary);\n      } else {\n        alert(\"없는 일기입니다.\");\n        navigate(\"/\", { replace: true });\n      }\n    }\n  }, [id, diaryList]);\n\n  if (!data) {\n    return <div className=\"DiaryPage\">로딩중...</div>;\n  } else {\n    const curEmotionData = emotionList.find(\n      (it) => parseInt(it.emotion_id) === parseInt(data.emotion)\n    );\n    console.log(curEmotionData);\n    return (\n      <div className=\"DiaryPage\">\n        <MyHeader\n          headText={`${getStringDate(new Date(data.date))} 기록`}\n          leftChild={\n            <MyButton text={\"< 뒤로가기\"} onClick={() => navigate(-1)} />\n          }\n          rightChild={\n            <MyButton\n              text={\"수정하기\"}\n              onClick={() => navigate(`/edit/${data.id}`)}\n            />\n          }\n        />\n        <article>\n          <section>\n            <h4>오늘의 기분</h4>\n            <div\n              className={[\n                \"diary_img_wrapper\",\n                `diary_img_wrapper_${data.emotion}`,\n              ].join(\" \")}\n            >\n              <img src={curEmotionData.emotion_img} />\n              <div className=\"emotion_descript\">\n                {curEmotionData.emotion_descript}\n              </div>\n            </div>\n          </section>\n          <section>\n            <h4>오늘의 일기</h4>\n            <div className=\"diary_content_wrapper\">\n              <p>{data.content}</p>\n            </div>\n          </section>\n        </article>\n      </div>\n    );\n  }\n};\n\nexport default Diary;\n","/Users/macbook/Desktop/simplediary/src/components/MyButton.js",[],[],"/Users/macbook/Desktop/simplediary/src/components/MyHeader.js",[],[],"/Users/macbook/Desktop/simplediary/src/components/DiaryList.js",["83"],[],"import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MyButton from \"./MyButton\";\nimport DiaryItem from \"./DiaryItem\";\nimport { useEffect } from \"react\";\n\nconst sortOptionList = [\n  { value: \"latest\", name: \"최신순\" },\n  { value: \"oldest\", name: \"오래된 순\" },\n];\n\nconst filterOptionList = [\n  { value: \"all\", name: \"all\" },\n  { value: \"good\", name: \"good\" },\n  { value: \"bad\", name: \"bad\" },\n];\nconst ControlMenu = React.memo(({ value, onChange, optionList }) => {\n  return (\n    <select\n      className=\"ControlMenu\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n    >\n      {optionList.map((it, idx) => (\n        <option key={idx} value={it.value}>\n          {it.name}\n        </option>\n      ))}\n    </select>\n  );\n});\n\nconst DiaryList = ({ diaryList }) => {\n  const navigate = useNavigate();\n  const [sortType, setSortType] = useState(\"latest\");\n  const [filter, setFilter] = useState(\"all\");\n\n  const getProcessedDiaryList = () => {\n    const filterCallBack = (item) => {\n      if (filter === \"good\") {\n        return parseInt(item.emotion) <= 3;\n      } else {\n        return parseInt(item.emotion) > 3;\n      }\n    };\n    const compare = (a, b) => {\n      if (sortType === \"latest\") {\n        return parseInt(b.date) - parseInt(a.date);\n      } else {\n        return parseInt(a.date) - parseInt(b.date);\n      }\n    };\n\n    const copyList = JSON.parse(JSON.stringify(diaryList));\n    const filteredList =\n      filter === \"all\" ? copyList : copyList.filter((it) => filterCallBack(it));\n    const sortedList = filteredList.sort(compare);\n    return sortedList;\n  };\n\n  return (\n    <div className=\"DiaryList\">\n      <div className=\"menu_wrapper\">\n        <div className=\"left_col\"></div>\n        <ControlMenu\n          value={sortType}\n          onChange={setSortType}\n          optionList={sortOptionList}\n        />\n        <ControlMenu\n          value={filter}\n          onChange={setFilter}\n          optionList={filterOptionList}\n        />\n        <div className=\"right_col\"></div>\n        <MyButton\n          type={\"positive\"}\n          text={\"새 일기 쓰기\"}\n          onClick={() => navigate(\"/new\")}\n        />\n      </div>\n\n      {getProcessedDiaryList().map((it) => (\n        <DiaryItem key={it.id} {...it}></DiaryItem>\n      ))}\n    </div>\n  );\n};\n\nDiaryList.defaultProps = {\n  diaryList: [],\n};\n\nexport default DiaryList;\n","/Users/macbook/Desktop/simplediary/src/components/DiaryItem.js",["84"],[],"import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MyButton from \"./MyButton\";\n\nconst DiaryItem = ({ id, emotion, content, date }) => {\n  const navigate = useNavigate();\n  const strDate = new Date(parseInt(date)).toLocaleDateString();\n\n  const goDetail = () => {\n    navigate(`/diary/${id}`);\n  };\n\n  const goEdit = () => {\n    navigate(`/edit/${id}`);\n  };\n\n  return (\n    <div className=\"DiaryItem\">\n      <div\n        onClick={goDetail}\n        className={[\n          \"emotion_img_wrapper\",\n          `emotion_img_wrapper_${emotion}`,\n        ].join(\" \")}\n      >\n        <img\n          src={process.env.PUBLIC_URL + `assets/emotion${emotion}.png`}\n        ></img>\n      </div>\n      <div onClick={goDetail} className=\"info_wrapper\">\n        <div className=\"diary_date\">{strDate}</div>\n        <div className=\"diary_content_preview\">{content.slice(0, 25)}</div>\n      </div>\n      <div className=\"btn_wrapper\">\n        <MyButton onClick={goEdit} text={\"수정하기\"} />\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DiaryItem);\n","/Users/macbook/Desktop/simplediary/src/components/DiaryEditor.js",[],[],"/Users/macbook/Desktop/simplediary/src/components/EmotionItem.js",["85"],[],"import React from \"react\";\n\nconst EmotionItem = ({\n  emotion_id,\n  emotion_img,\n  emotion_descript,\n  onClick,\n  isSelected,\n}) => {\n  return (\n    <div\n      onClick={() => onClick(emotion_id)}\n      className={[\n        \"EmotionItem\",\n        isSelected ? `EmotionItem_on${emotion_id}` : `EmotionItem_off`,\n      ].join(\" \")}\n    >\n      <img src={emotion_img} />\n      <span>{emotion_descript}</span>\n    </div>\n  );\n};\n\nexport default React.memo(EmotionItem);\n","/Users/macbook/Desktop/simplediary/src/util/date.js",[],[],"/Users/macbook/Desktop/simplediary/src/util/emotion.js",[],[],{"ruleId":"86","severity":1,"message":"87","line":16,"column":6,"nodeType":"88","endLine":16,"endColumn":8,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":30,"column":6,"nodeType":"88","endLine":30,"endColumn":21,"suggestions":"91"},{"ruleId":"86","severity":1,"message":"87","line":19,"column":6,"nodeType":"88","endLine":19,"endColumn":8,"suggestions":"92"},{"ruleId":"86","severity":1,"message":"90","line":34,"column":6,"nodeType":"88","endLine":34,"endColumn":21,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":66,"column":15,"nodeType":"96","endLine":66,"endColumn":55},{"ruleId":"97","severity":1,"message":"98","line":5,"column":10,"nodeType":"99","messageId":"100","endLine":5,"endColumn":19},{"ruleId":"94","severity":1,"message":"95","line":26,"column":9,"nodeType":"96","endLine":28,"endColumn":10},{"ruleId":"94","severity":1,"message":"95","line":18,"column":7,"nodeType":"96","endLine":18,"endColumn":32},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["101"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["102"],["103"],["104"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"105","fix":"109"},{"desc":"107","fix":"110"},"Update the dependencies array to be: [id]",{"range":"111","text":"112"},"Update the dependencies array to be: [id, diaryList, navigate]",{"range":"113","text":"114"},{"range":"115","text":"112"},{"range":"116","text":"114"},[549,551],"[id]",[846,861],"[id, diaryList, navigate]",[669,671],[1007,1022]]