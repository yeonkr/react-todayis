{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/simplediary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport Lifecycle from \"./Lifecycle\"; // https://jsonplaceholder.typicode.com/comments\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(`https://jsonplaceholder.typicode.com/comments`).then(res > res.json());\n  };\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  const onRemove = targetId => {\n    console.log(`${targetId}가 삭제되었습니다`);\n    const newDiaryList = data.filter(it => it.id !== targetId);\n    setData(newDiaryList);\n  }; // 일기 데이터를 수정하는 함수\n\n\n  const onEidt = (targetId, newContent) => {\n    setData(data.map(it => it.id === targetId ? { ...it,\n      content: newContent\n    } : it));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Lifecycle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      onEidt: onEidt,\n      onRemove: onRemove,\n      diaryList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PSh4R9M9XXzghkCT8iIKMDh9kfM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRef","useState","DiaryEditor","DiaryList","Lifecycle","App","data","setData","dataId","getData","res","fetch","then","json","onCreate","author","content","emotion","created_date","Date","getTime","newItem","id","current","onRemove","targetId","console","log","newDiaryList","filter","it","onEidt","newContent","map"],"sources":["/Users/macbook/Desktop/simplediary/src/App.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport Lifecycle from \"./Lifecycle\";\n\n// https://jsonplaceholder.typicode.com/comments\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\n      `https://jsonplaceholder.typicode.com/comments`\n    ).then(res > res.json());\n  };\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  const onRemove = (targetId) => {\n    console.log(`${targetId}가 삭제되었습니다`);\n    const newDiaryList = data.filter((it) => it.id !== targetId);\n    setData(newDiaryList);\n  };\n\n  // 일기 데이터를 수정하는 함수\n  const onEidt = (targetId, newContent) => {\n    setData(\n      data.map((it) =>\n        it.id === targetId ? { ...it, content: newContent } : it\n      )\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Lifecycle />\n      <DiaryEditor onCreate={onCreate} />\n      <DiaryList onEidt={onEidt} onRemove={onRemove} diaryList={data} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;EAEA,MAAMO,MAAM,GAAGR,MAAM,CAAC,CAAD,CAArB;;EAEA,MAAMS,OAAO,GAAG,YAAY;IAC1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,+CADoB,CAAL,CAEhBC,IAFgB,CAEXF,GAAG,GAAGA,GAAG,CAACG,IAAJ,EAFK,CAAlB;EAGD,CAJD;;EAMA,MAAMC,QAAQ,GAAG,CAACC,MAAD,EAASC,OAAT,EAAkBC,OAAlB,KAA8B;IAC7C,MAAMC,YAAY,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAArB;IACA,MAAMC,OAAO,GAAG;MACdN,MADc;MAEdC,OAFc;MAGdC,OAHc;MAIdC,YAJc;MAKdI,EAAE,EAAEd,MAAM,CAACe;IALG,CAAhB;IAOAf,MAAM,CAACe,OAAP,IAAkB,CAAlB;IACAhB,OAAO,CAAC,CAACc,OAAD,EAAU,GAAGf,IAAb,CAAD,CAAP;EACD,CAXD;;EAaA,MAAMkB,QAAQ,GAAIC,QAAD,IAAc;IAC7BC,OAAO,CAACC,GAAR,CAAa,GAAEF,QAAS,WAAxB;IACA,MAAMG,YAAY,GAAGtB,IAAI,CAACuB,MAAL,CAAaC,EAAD,IAAQA,EAAE,CAACR,EAAH,KAAUG,QAA9B,CAArB;IACAlB,OAAO,CAACqB,YAAD,CAAP;EACD,CAJD,CAxBa,CA8Bb;;;EACA,MAAMG,MAAM,GAAG,CAACN,QAAD,EAAWO,UAAX,KAA0B;IACvCzB,OAAO,CACLD,IAAI,CAAC2B,GAAL,CAAUH,EAAD,IACPA,EAAE,CAACR,EAAH,KAAUG,QAAV,GAAqB,EAAE,GAAGK,EAAL;MAASd,OAAO,EAAEgB;IAAlB,CAArB,GAAsDF,EADxD,CADK,CAAP;EAKD,CAND;;EAQA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,WAAD;MAAa,QAAQ,EAAEhB;IAAvB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,SAAD;MAAW,MAAM,EAAEiB,MAAnB;MAA2B,QAAQ,EAAEP,QAArC;MAA+C,SAAS,EAAElB;IAA1D;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GA9CQD,G;;KAAAA,G;AAgDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}